<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Community Solid Server configuration tool</title>
</head>

<body>
  <div class="container-lg">

    <!-- Configuration toggle button on smaller devices -->
    <button class="btn btn-primary d-lg-none config-btn" type="button" data-bs-toggle="offcanvas"
            data-bs-target="#offcanvasResponsive" aria-controls="offcanvasResponsive" title="Toggle generated config">
      <i class="bi bi-braces"></i>
    </button>

    <!-- Toast on successful copy -->
    <div class="toast-container position-fixed top-0 end-0 p-3">
      <div id="liveToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header text-success">
          <i class="bi bi-clipboard-check me-1"></i>
          <strong class="me-auto">Success</strong>
          <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
          Configuration copied!
        </div>
      </div>
    </div>

    <!-- Header -->
    <div class="row">
      <div class="col">
        <h1>Community Solid Server <small class="text-muted">configuration generator</small></h1>
        <p class="intro">
          This tool can be used to generate configurations for the
          <a href="https://github.com/CommunitySolidServer/CommunitySolidServer">Community Solid Server</a>.
          More information about the configurations can be found in the
          <a href="https://github.com/CommunitySolidServer/CommunitySolidServer/tree/main/config">
            CSS <code>config</code> folder
          </a>
          and in the relevant
          <a href="https://github.com/CommunitySolidServer/tutorials/">tutorials</a>.
          There is a tutorial specifically about
          <a href="https://github.com/CommunitySolidServer/tutorials/blob/main/custom-configurations.md">
            customizing configurations
          </a>
          if you want to customize your configuration even more afterwards.
        </p>
        <p class="intro">
          Select the options you want from your server. The corresponding configuration can be found at the bottom.
          This configuration can then be used to start the server using the <code>-c my-config.json</code> CLI
          parameter.
        </p>
        <p>
          This version of the tool makes configurations for servers running CSS v<%= version %>.x.
        </p>
      </div>
    </div>

    <!-- Error alert -->
    <div class="row" id="error-alert">
      <div class="col">
        <div class="alert alert-danger d-flex align-items-center" role="alert">
          <i class="bi bi-exclamation-triangle-fill me-2"></i>
          <div id="error-text"></div>
        </div>
      </div>
    </div>

    <!-- Main content -->
    <div class="row">

      <!-- Configuration options -->
      <div class="col-lg-7 settings">
        <form id="form">
          <div class="accordion accordion-flush" id="accordionChoices">
            <% for (const group of groups) { %>

              <!-- Group header -->
              <div class="accordion-item" id="<%= group.id %>">
                <div class="accordion-header" id="<%= group.id %>-header">
                  <button class="fs-3 accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#<%= group.id %>-collapse"
                          aria-controls="#<%= group.id %>-collapse" aria-labelledby="#<%= group.id %>-header">
                    <%- group.name %>
                  </button>
                </div>

                <!-- Group collapsable body -->
                <div id="<%= group.id %>-collapse" class="accordion-collapse collapse" data-bs-parent="#accordionChoices">
                  <div class="accordion-body choice">

                    <!-- Accordion for the group elements -->
                    <div class="accordion accordion-flush" id="<%= group.id %>-accordion">
                    <p><%- group.description %></p>
                    <% for (const choice of group.choices) { %>

                      <div class="accordion-item" id="<%= choice.name %>">
                        <!-- Choice header-->
                        <div class="accordion-header" id="<%= choice.name %>-header">
                          <button class="py-2 fs-5 accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#<%= choice.name %>-collapse"
                                  aria-controls="#<%= choice.name %>-collapse" aria-labelledby="#<%= choice.name %>-header">
                            <%- choice.title %>
                          </button>
                        </div>

                        <!-- Choice collapsable body -->
                        <div id="<%= choice.name %>-collapse" class="accordion-collapse collapse" data-bs-parent="#<%= group.id %>-accordion">
                          <div class="accordion-body choice">
                            <div class="description"><p><%- choice.description %></p></div>
                            <fieldset class="radios">
                              <% for (const { value, label } of choice.options) { %>

                                <!-- Choice -->
                                <!-- `option` class and id are used by `options` query parameter to remove certain entries -->
                                <div class="form-check option" id="<%= `${choice.name}:${value}` %>">
                                  <label class="form-check-label">
                                    <input class="form-check-input" type="radio" name="<%= choice.name %>" value="<%- value %>" <%= choice.default===value ? 'checked' : '' %>>
                                    <%- label %>
                                  </label>
                                </div>

                                <% } %>
                            </fieldset>
                          </div>
                        </div>
                      </div>

                    <% } %>
                    </div>
                  </div>
                </div>
              </div>
            <% } %>
          </div>
        </form>
      </div>

      <!-- Generated configuration -->
      <div class="col-lg-5">
        <!-- Hide the offcanvas on larger screens -->
        <div class="offcanvas-lg offcanvas-bottom" data-bs-scroll="true" data-bs-backdrop="false" tabindex="-1"
          id="offcanvasResponsive" aria-label="Generated config">
          <div class="offcanvas-body flex-column">
            <h5 class="offcanvas-title">
              Generated config
              <button type="button" class="btn btn-primary btn-sm copy-btn" data-bs-toggle="tooltip" data-bs-placement="top" title="Copy to clipboard">
                <i class="bi bi-clipboard"></i>
              </button>
              <!-- Only show the close button on smaller screens when this is an actual offcanvas -->
              <button type="button" class="btn-close d-lg-none float-end" data-bs-dismiss="offcanvas" data-bs-target="#offcanvasResponsive" aria-label="Close"></button>
            </h5>
            <pre id="text" class="config mb-0 pb-2"></pre>
          </div>
        </div>
      </div>
    </div>
  </div>
  <script src="./bundle.js"></script>
</body>

</html>
