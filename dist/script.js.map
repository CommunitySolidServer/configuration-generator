{"version":3,"file":"script.js","sourceRoot":"","sources":["../../src/script.ts"],"names":[],"mappings":"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","sourcesContent":["\n// TODO: way to integrate this with recipes and/or make this project easily extensible by recipes repo?\n//       ^ just any repo in general, such as hello world\n//       ^ service that takes stuff as input and then wraps around that?\n\nconst CONTEXT = 'https://linkedsoftwaredependencies.org/bundles/npm/@solid/community-server/^5.0.0/components/context.jsonld';\n\ninterface Choices {\n  // Initialize root as storage and fully accessible (GIVES FULL ACCESS WHICH NEEDS TO BE UPDATED).\n  initializeRoot: boolean;\n  // Require setup to be performed.\n  setup: boolean;\n  // Enable (legacy) websockets.\n  webSockets: boolean;\n  // Enable HTTPS (and require relevantsCLI args).\n  https: boolean;\n  // Also apply authorization rules to IDP API (GIVES FULL ACCESS WHICH NEEDS TO BE UPDATED).\n  restrictIdpApi: boolean;\n  // Enable email service for password recovery (requires template to be filled in).\n  email: boolean;\n  // Enable ownership checks for WebID registration (UNSAFE IF DISABLED).\n  ownership: boolean;\n  // Allow registration on the server.\n  registration: boolean;\n  // Authorization method. None if undefined (indicate this is unsafe).\n  authorization?: 'wac';\n  // TODO: redis override for configuration\n  // How to store the data.\n  // `regex` writes internal data to the file system and data to SPARQL;\n  // Quota also requires extra template.\n  backend: 'file' | 'memory' | 'sparql' | 'pod-quota-file' | 'regex';\n  // How to store internal state data (backend breaks if SPARQL is chosen).\n  // TODO: throw error if backend is sparql and internal is resource-store\n  internal: 'memory' | 'resource-store';\n  // Use subdomain URLs when generating pods.\n  subdomain: boolean;\n  // Adds constant converter to be used by GUI apps (this import should just be removed and replaced with a waterfall handler).\n  index: boolean;\n  // Which locking method to use. None if undefined (indicate this is unsafe). Add template if redis.\n  locking?: 'file' | 'memory' | 'redis';\n}\n\ntype Import = `css:config/${string}/${string}/${string}.json`;\n\ninterface Config {\n  '@context': typeof CONTEXT,\n  import: Import[];\n  '@graph': unknown[];\n}\n\ninterface Override {\n  '@id'?: string,\n  comment: string;\n  '@type': 'Override',\n  overrideInstance: { '@id': string },\n  overrideParameters: Record<string, unknown> & { '@type': string },\n}\n\nconst DEFAULT_IMPORTS: readonly Import[] = [\n  generateImport('app', 'main', 'default'),\n  generateImport('app', 'variables', 'default'),\n  generateImport('http', 'handler', 'default'),\n  generateImport('http', 'static', 'default'),\n  generateImport('identity', 'handler', 'default'),\n  generateImport('identity', 'pod', 'static'),\n  generateImport('ldp', 'authentication', 'dpop-bearer'),\n  generateImport('ldp', 'handler', 'default'),\n  generateImport('ldp', 'metadata-parser', 'default'),\n  generateImport('ldp', 'metadata-writer', 'default'),\n  generateImport('ldp', 'modes', 'default'),\n  generateImport('storage', 'middleware', 'default'),\n  generateImport('util', 'logging', 'winston'),\n  generateImport('util', 'representation-conversion', 'default'),\n  generateImport('util', 'variables', 'default'),\n] as const;\n\nfunction generateImport(group: string, entry: string, choice: string): Import {\n  return `css:config/${group}/${entry}/${choice}.json`;\n}\n\nfunction getServerFactoryImport(webSockets: boolean, https: boolean): Import {\n  if (webSockets) {\n    return generateImport('http', 'server-factory', https ? 'https-websockets' : 'websockets');\n  }\n  return generateImport('http', 'server-factory', https ? 'https-no-websockets' : 'no-websockets');\n}\n\nfunction generateImports(choices: Choices): Import[] {\n  const imports: Import[] = [ ...DEFAULT_IMPORTS ];\n\n  if (choices.backend === 'sparql' && choices.internal === 'resource-store') {\n    throw new Error('SPARQL backend can not be chosen if the backend is used for internal storage.');\n  }\n  if (choices.backend === 'regex' && choices.internal === 'memory') {\n    throw new Error('Combining the regex backend with in-memory internal storage does not make sense.');\n  }\n  if (!choices.registration && !choices.setup && !choices.initializeRoot) {\n    throw new Error('There would be no way to write data to this server.');\n  }\n\n  imports.push(generateImport('app', 'init', choices.initializeRoot ? 'initialize-root' : 'default'));\n  imports.push(generateImport('app', 'setup', choices.setup ? 'required' : 'disabled'));\n  imports.push(generateImport('http', 'middleware', choices.webSockets ? 'websockets' : 'no-websockets'));\n  imports.push(getServerFactoryImport(choices.webSockets, choices.https));\n  imports.push(generateImport('identity', 'access', choices.restrictIdpApi ? 'restricted' : 'public'));\n  imports.push(generateImport('identity', 'email', choices.email ? 'example' : 'disabled'));\n  imports.push(generateImport('identity', 'ownership', choices.ownership ? 'token' : 'unsafe-no-check'));\n  imports.push(generateImport('identity', 'registration', choices.registration ? 'enabled' : 'disabled'));\n  // In v5 there are 2 relevant imports for WAC\n  imports.push(generateImport('ldp', 'authorization', choices.authorization === 'wac' ? 'webacl' : 'allow-all'));\n  imports.push(generateImport('util', 'auxiliary', choices.authorization === 'wac' ? 'acl' : 'no-acl'));\n  imports.push(generateImport('storage', 'backend', choices.backend));\n  imports.push(generateImport('storage', 'key-value', choices.internal));\n  imports.push(generateImport('util', 'identifiers', choices.subdomain ? 'subdomain' : 'suffix'));\n  imports.push(generateImport('util', 'index', choices.index ? 'example' : 'default'));\n  imports.push(generateImport('util', 'resource-locker', choices.locking ?? 'debug-void'));\n\n  return imports;\n}\n\nfunction generateOverride(instance: string, type: string, comment: string, params: Record<string, unknown>): Override {\n  return {\n    comment: comment,\n    '@type': 'Override',\n    overrideInstance: { '@id': instance },\n    overrideParameters: {\n      '@type': type,\n      ...params,\n    }\n  }\n}\n\nfunction generateBody(choices: Choices): unknown[] {\n  const body: unknown[] = [];\n\n  if (choices.email) {\n    const comment = 'The settings of your email server.';\n    const params = {\n      senderName: 'Community Solid Server <solid@example.email>',\n      emailConfig_host: 'smtp.example.email',\n      emailConfig_port: 587,\n      emailConfig_auth_user: 'solid@example.email',\n      emailConfig_auth_pass: 'NYEaCsqV7aVStRCbmC'\n    }\n    body.push(generateOverride('urn:solid-server:default:EmailSender', 'BaseEmailSender', comment, params));\n  }\n\n  if (choices.index) {\n    const comment = 'An example of how the UI converter can be configured.';\n    const params = {\n      contentType: 'text/html',\n      filePath: './node_modules/mashlib/dist/databrowser.html',\n      options_container: true,\n      options_document: false,\n      options_minQuality: 1\n    }\n    body.push(generateOverride('urn:solid-server:default:DefaultUiConverter', 'ConstantConverter', comment, params));\n  }\n\n  if (choices.backend === 'regex') {\n    const comment = 'Overrides the default rule to make sure internal data is stored on the file system.';\n    const params = {\n      rules: [\n        {\n          comment: 'Stores internal data in the file system',\n          '@type': 'RegexRule',\n          regex: '^/\\\\.internal/',\n          store: { '@id': 'urn:solid-server:default:FileResourceStore' }\n        },\n        {\n          comment: 'Send everything else to the SPARQL store.',\n          '@type': 'RegexRule',\n          regex: '.*',\n          store: { '@id': 'urn:solid-server:default:SparqlResourceStore' }\n        }\n      ]\n    };\n    body.push(generateOverride('urn:solid-server:default:RouterRule', 'RegexRouterRule', comment, params));\n  }\n\n  return body;\n}\n\nfunction generateConfig(choices: Choices): Config {\n  const imports = generateImports(choices).sort();\n  const body = generateBody(choices);\n\n  return {\n    '@context': CONTEXT,\n    import: imports,\n    '@graph': body,\n  };\n}\n"]}